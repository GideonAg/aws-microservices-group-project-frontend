name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ./

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build
        working-directory: ./
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: ./build/

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: ./build/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS Amplify
        run: |
          # Determine environment based on branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            AMPLIFY_ENV="prod"
          else
            AMPLIFY_ENV="dev"
          fi

          # Install and configure Amplify CLI
          npm install -g @aws-amplify/cli

          # Configure Amplify
          echo "Configuring Amplify with environment: $AMPLIFY_ENV"
          amplify configure project --yes
          amplify env checkout $AMPLIFY_ENV --yes

          # Deploy to Amplify
          amplify publish --yes
